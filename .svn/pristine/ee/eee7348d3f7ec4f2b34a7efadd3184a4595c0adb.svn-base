<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.samhk.ynashk.mapper.FunctionPrivilegeDao">
    <resultMap type="MenuVo" id="PrivilegeMap">
        <result property="menuCode" column="MENU_CODE"/>
        <result property="menuName" column="MENU_NAME"/>
        <result property="parentMenuCode" column="PARENT_MENU_CODE"/>
        <result property="functionCode" column="FUNCTION_CODE"/>
        <collection property="functionList" ofType="functionVo">
            <id property="functionCode" column="FUNCTION_CODE"/>
            <result property="functionName" column="FUNCTION_NAME"/>
            <collection property="functionControlList" ofType="functionControlVo">
                <id property="functionCode" column="FUNCTION_CODE"/>
                <id property="controlCode" column="CONTROL_CODE"/>
                <result property="controlName" column="CONTROL_NAME"/>
                <result property="checked" column="CHECKED"/>
            </collection>
        </collection>
    </resultMap>
    <select id="getRoleFunctionPrivilege" resultMap="PrivilegeMap" parameterType="systemUserRoleVo">
        SELECT
        MM.MENU_CODE,
        MM.MENU_NAME,
        MM.PARENT_MENU_CODE,
        MM.FUNCTION_CODE,
        MM.FUNCTION_NAME,
        MM.CONTROL_CODE,
        MM.CONTROL_NAME,
        CASE WHEN UPPER(NN.ACCESSIBLE_IND) = 'Y' THEN 1 ELSE 0 END AS CHECKED
        FROM
        (SELECT
        SM.MENU_CODE,
        SM.MENU_NAME,
        SM.PARENT_MENU_CODE,
        SM.DISPLAY_ORDER,
        TEMP.FUNCTION_CODE,
        TEMP.FUNCTION_NAME,
        TEMP.CONTROL_CODE,
        TEMP.CONTROL_NAME
        FROM
        (
        SELECT
        aa.*
        FROM sys_menu aa
        WHERE aa.MENU_CODE  in (SELECT DISTINCT PARENT_MENU_CODE FROM sys_menu)

        UNION

        SELECT
        bb.*
        FROM sys_function ssf
        LEFT JOIN sys_menu bb ON ssf.MENU_CODE = bb.MENU_CODE
        ) SM
        LEFT JOIN
        (
        SELECT
        SF.FUNCTION_CODE,
        SF.FUNCTION_NAME,
        SF.MENU_CODE,
        SF.OBJECT_NAME,
        SFC.CONTROL_CODE,
        SFC.CONTROL_NAME
        FROM
        SYS_FUNCTION SF
        LEFT JOIN
        SYS_FUNCTION_CONTROL SFC
        ON
        SFC.FUNCTION_CODE = SF.FUNCTION_CODE
        ORDER BY
        SF.DISPLAY_ORDER
        )TEMP
        ON
        SM.MENU_CODE = TEMP.MENU_CODE
        ORDER BY
        SM.DISPLAY_ORDER
        )MM
        LEFT JOIN(
        SELECT
        SF.MENU_CODE,
        SF.FUNCTION_CODE,
        SF.FUNCTION_NAME,
        SFC.CONTROL_CODE,
        SFC.CONTROL_NAME,
        SFP.ACCESSIBLE_IND
        FROM
        SYS_FUNCTION_PRIVILEGE SFP
        LEFT JOIN
        SYS_FUNCTION SF
        ON
        SF.FUNCTION_CODE = SFP.FUNCTION_CODE
        LEFT JOIN
        SYS_FUNCTION_CONTROL SFC
        ON
        SFC.CONTROL_CODE = SFP.CONTROL_CODE
        AND
        SFC.FUNCTION_CODE = SFP.FUNCTION_CODE
        <where>
            <choose>
                <when test="roleCode != null and roleCode !=''">
                    SFP.ROLE_CODE = #{roleCode, jdbcType=VARCHAR}
                </when>
                <otherwise>
                    SFP.ROLE_CODE IS NULL
                </otherwise>
            </choose>
        </where>
        )NN
        ON
        MM.MENU_CODE = NN.MENU_CODE
        AND
        MM.FUNCTION_CODE = NN.FUNCTION_CODE
        AND
        MM.CONTROL_CODE = NN.CONTROL_CODE
        ORDER BY
        MM.DISPLAY_ORDER, MM.FUNCTION_CODE

    </select>
    <insert id="addFunctionPrivilegeVoList" parameterType="functionPrivilegeVo">
		INSERT INTO sys_function_privilege(
			ROLE_CODE,
			FUNCTION_CODE,
			CONTROL_CODE,
			ACCESSIBLE_IND,
			CRU,
			CRD,
			LUU,
			LUD
		) VALUES(
			#{roleCode,jdbcType=VARCHAR},
		    #{functionCode,jdbcType=VARCHAR},
		    #{controlCode,jdbcType=VARCHAR},
		    #{accessibleInd,jdbcType=VARCHAR},
		    #{cru,jdbcType=VARCHAR},
	        date_format(NOW(),'%Y/%m/%d/%T'),
    		#{luu,jdbcType=VARCHAR},
		    date_format(NOW(),'%Y/%m/%d/%T')
		)
	</insert>
    <delete id="deleteFunctionPrivilegeVoList" parameterType="java.lang.String">
		DELETE FROM sys_function_privilege
		WHERE ROLE_CODE=#{roleCode,jdbcType=VARCHAR}
	</delete>

    <select id="getFunctionPrivilegeByCode" resultType="map">
        SELECT
        MM.MENU_CODE,
        MM.MENU_NAME,
        MM.PARENT_MENU_CODE,
        MM.FUNCTION_CODE,
        MM.FUNCTION_NAME,
        MM.CONTROL_CODE,
        MM.CONTROL_NAME,
        CASE WHEN UPPER(NN.ACCESSIBLE_IND) = 'Y' THEN 1 ELSE 0 END AS CHECKED
        FROM
        (SELECT
        SM.MENU_CODE,
        SM.MENU_NAME,
        SM.PARENT_MENU_CODE,
        SM.DISPLAY_ORDER,
        TEMP.FUNCTION_CODE,
        TEMP.FUNCTION_NAME,
        TEMP.CONTROL_CODE,
        TEMP.CONTROL_NAME
        FROM
        (
        SELECT
        aa.*
        FROM sys_menu aa
        WHERE aa.MENU_CODE  in (SELECT DISTINCT PARENT_MENU_CODE FROM sys_menu)

        UNION

        SELECT
        bb.*
        FROM sys_function ssf
        LEFT JOIN sys_menu bb ON ssf.MENU_CODE = bb.MENU_CODE
        ) SM
        LEFT JOIN
        (
        SELECT
        SF.FUNCTION_CODE,
        SF.FUNCTION_NAME,
        SF.MENU_CODE,
        SF.OBJECT_NAME,
        SFC.CONTROL_CODE,
        SFC.CONTROL_NAME
        FROM
        SYS_FUNCTION SF
        LEFT JOIN
        SYS_FUNCTION_CONTROL SFC
        ON
        SFC.FUNCTION_CODE = SF.FUNCTION_CODE
        ORDER BY
        SF.DISPLAY_ORDER
        )TEMP
        ON
        SM.MENU_CODE = TEMP.MENU_CODE
        ORDER BY
        SM.DISPLAY_ORDER
        )MM
        LEFT JOIN(
        SELECT
        SF.MENU_CODE,
        SF.FUNCTION_CODE,
        SF.FUNCTION_NAME,
        SFC.CONTROL_CODE,
        SFC.CONTROL_NAME,
        SFP.ACCESSIBLE_IND
        FROM
        SYS_FUNCTION_PRIVILEGE SFP
        LEFT JOIN
        SYS_FUNCTION SF
        ON
        SF.FUNCTION_CODE = SFP.FUNCTION_CODE
        LEFT JOIN
        SYS_FUNCTION_CONTROL SFC
        ON
        SFC.CONTROL_CODE = SFP.CONTROL_CODE
        AND
        SFC.FUNCTION_CODE = SFP.FUNCTION_CODE

        )NN
        ON
        MM.MENU_CODE = NN.MENU_CODE
        AND
        MM.FUNCTION_CODE = NN.FUNCTION_CODE
        AND
        MM.CONTROL_CODE = NN.CONTROL_CODE
        where
        <if test="function_code != null and control_code != null">
            MM.FUNCTION_CODE = #{function_code} and
            MM.CONTROL_CODE = #{control_code}
        </if>
        <if test="menu_code != null">
            MM.MENU_CODE = #{menu_code}
        </if>


        limit 1



    </select>

</mapper>